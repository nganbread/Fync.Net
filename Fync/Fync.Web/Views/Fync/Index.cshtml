@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@model FyncModel

<div class="z-depth-1 panel" id="pathPanel"></div>
<div id="currentFolder"></div>
@*@Html.React("FileList", new
    {
        files = Model.Files,
        folders = Model.FolderWithParentAndChildren.SubFolders,
        parent = Model.FolderWithParentAndChildren.Parent,
        id = Model.FolderWithParentAndChildren.Id,
        name = Model.FolderWithParentAndChildren.Name,
        modifiedDate = Model.FolderWithParentAndChildren.ModifiedDate,
        deleted = Model.FolderWithParentAndChildren.Deleted
})*@

@section scripts{
    <script type="text/javascript">
        //Start services
        require(['react/services/history', 'react/services/pageTitle'], function(history, pageTitle) {
            pageTitle.start();
            history.start();
        });

        //Start rendering
        require(['jquery', 'react', 'react/components/folder', 'react/components/pathPanel'], function($, react, Folder, PathPanel) {
            $(function () {
                var props = @Html.Raw(JsonConvert.SerializeObject(new
                {
                    files = Model.Files,
                    folders = Model.Folder.SubFolders,
                    parent = Model.Folder.Parent,
                    id = Model.Folder.Id,
                    name = Model.Folder.Name,
                    modifiedDate = Model.Folder.ModifiedDate,
                    deleted = Model.Folder.Deleted
                }, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }));

                react.render(new Folder(props), $("#currentFolder")[0]);
                react.render(new PathPanel(props), $("#pathPanel")[0]);
            });
        });

    </script>
}
