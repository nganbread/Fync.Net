@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@model FyncModel

<div id="app-container"></div>
@*@Html.React("FileList", new
    {
        files = Model.Files,
        folders = Model.FolderWithParentAndChildren.SubFolders,
        parent = Model.FolderWithParentAndChildren.Parent,
        id = Model.FolderWithParentAndChildren.Id,
        name = Model.FolderWithParentAndChildren.Name,
        modifiedDate = Model.FolderWithParentAndChildren.ModifiedDate,
        deleted = Model.FolderWithParentAndChildren.Deleted
})*@

@section scripts{
    <script type="text/javascript">
        //Start services
        require(['react/services/history', 'react/services/pageTitle'], function(history, pageTitle) {
            pageTitle.start();
            history.start();
        });

        //Start rendering
        require(['jquery', 'react', 'react/components/app'], function($, react, AppClass) {
            $(function() {
                var folder = @Html.Raw(JsonConvert.SerializeObject(new
                            {
                                files = Model.Files,
                                folders = Model.Folder.SubFolders,
                                parent = Model.Folder.Parent,
                                id = Model.Folder.Id,
                                name = Model.Folder.Name,
                                modifiedDate = Model.Folder.ModifiedDate,
                                deleted = Model.Folder.Deleted
                            }, new JsonSerializerSettings {ContractResolver = new CamelCasePropertyNamesContractResolver()}));

                var initialState = {
                    folder: folder
                }
                var App = react.createFactory(AppClass);
                react.render(new App(initialState), $("#app-container")[0]);
            });
        });

    </script>
}
